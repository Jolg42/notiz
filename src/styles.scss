/* purgecss start ignore */
@import 'tailwindcss/base';
@import 'base-styles.scss';

@import '@ionic/angular/css/core';
@import '@ionic/angular/css/typography';
@import '@ionic/angular/css/float-elements';
@import '@ionic/angular/css/text-alignment';
@import '@ionic/angular/css/text-transformation';
@import '@ionic/angular/css/flex-utils';

@import 'prismjs/themes/prism-tomorrow';
@import 'prismjs/plugins/toolbar/prism-toolbar';

@import 'tailwindcss/components';
/* purgecss end ignore */

@import 'tailwindcss/utilities';

@import url('https://fonts.googleapis.com/css?family=Muli&display=swap');

:root {
  --ion-font-family: 'Muli', sans-serif;
  font-family: 'Muli', sans-serif;
}

::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
::-webkit-scrollbar-track {
  background: var(--ion-color-light);
}
::-webkit-scrollbar-thumb {
  background: var(--gradient);
  border-radius: 99px;
}

.theme.dark.rotate niz-inline-svg {
  transform: rotateZ(180deg);
}
.theme niz-inline-svg {
  transition: transform 150ms ease;
}

body.dark {
  .cta.secondary {
    --background: var(--ion-background-color);
    --box-shadow: 20px 20px 60px #090909, -20px -20px 60px #1b1b1b;
  }
}

body:not(.dark) {
  .cta.secondary {
    --background: var(--ion-background-color);
    --box-shadow: 5px 5px 14px #ededed, -5px -5px 14px #ffffff;
  }
}

.cta {
  border-radius: 50px;
  --background: var(--gradient);

  --padding-top: 0.2em;
  --padding-start: 1.2em;
  --padding-end: 1.2em;
  --padding-bottom: 0.2em;
  height: 3.4em;
  font-size: 22px;
}

.cta.secondary {
  --color: var(--ion-color-secondary);
  --border-style: none;
}

a {
  text-decoration: none;
}

span,
div {
  color: var(--ion-text-color);
}

a:hover {
  background-image: var(--gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

a,
h1,
h2,
h3,
h4,
p {
  color: var(--ion-text-color);
}

ion-grid {
  --ion-grid-width: 100%;
  --ion-grid-width-xs: 100%;
  --ion-grid-width-sm: 100%;
  --ion-grid-width-md: 100%;
  --ion-grid-width-lg: 1040px;
  --ion-grid-width-xl: 1180px;
}

.sticky-tags {
  position: sticky;
  top: 64px;
}

.list-article:first-of-type {
  margin-top: 24px;
}

.list-article:not(:first-of-type) {
  margin-top: 86px;
}

.hidden-xs-up {
  display: none !important;
}

@media (max-width: 575px) {
  .hidden-xs-down {
    display: none !important;
  }
}

@media (min-width: 576px) {
  .hidden-sm-up {
    display: none !important;
  }
}

@media (max-width: 767px) {
  .hidden-sm-down {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .hidden-md-up {
    display: none !important;
  }
}

@media (max-width: 991px) {
  .hidden-md-down {
    display: none !important;
  }
}

@media (min-width: 992px) {
  .hidden-lg-up {
    display: none !important;
  }
}

@media (max-width: 1199px) {
  .hidden-lg-down {
    display: none !important;
  }
}

@media (min-width: 1200px) {
  .hidden-xl-up {
    display: none !important;
  }
}

.hidden-xl-down {
  display: none !important;
}

.padding64 {
  padding-top: 64px;
}

// markdown

.token.boolean,
.token.function,
.token.number {
  color: #f38e54;
}

.token.attr-value,
.token.char,
.token.regex,
.token.string,
.token.variable {
  color: #62f296;
}
.token.class-name,
.token.constant,
.token.property,
.token.symbol {
  color: #f2df62;
}

body.dark .post {
  a,
  li:before {
    color: var(--ion-color-secondary);
  }

  h2 {
    color: var(--ion-color-primary-tint);
  }

  pre {
    border-radius: 16px;
    background: var(--ion-item-background);
    box-shadow: inset 22px 22px 44px #16171a, inset -22px -22px 44px #1e1f23;
  }

  p {
    code {
      color: #ffe9cd;
    }
  }
}
body:not(.dark) .post {
  a,
  li:before {
    color: var(--ion-color-primary);
  }

  h2 {
    color: var(--ion-item-background);
  }

  pre {
    border-radius: 16px;
    background: var(--ion-color-primary-tint);
  }
  p {
    code {
      background: #fff6ea;
    }
  }
}

.post {
  p {
    code {
      padding: 0px 6px;
      border-radius: 0.2rem;
    }
  }

  ul {
    list-style: none; /* Remove default bullets */
  }

  ul li::before {
    content: '\2022'; /* Add content: \2022 is the CSS Code/unicode for a bullet */
    font-weight: bold; /* If you want it to be bold */
    display: inline-block; /* Needed to add space between the bullet and the text */
    width: 1em; /* Also needed for space (tweak if needed) */
    margin-left: -1em; /* Also needed for space (tweak if needed) */
  }

  ol {
    list-style: none;
    counter-reset: li;
  }
  ol li::before {
    content: counter(li) '. ';
    display: inline-block;
    width: 1em;
    margin-left: -1em;
  }
  ol li {
    counter-increment: li;
  }

  p,
  a,
  li {
    font-size: 1.18rem;
  }
  p,
  pre {
    margin: 0 0 1.5rem;
  }
  h2 {
    font-size: 28px;
    font-weight: 600;
    margin-top: 42px;
  }

  code[class*='language-'],
  pre[class*='language-'] {
    color: var(--ion-text-color);
  }
}

.about {
  p {
    font-size: 1rem;
  }
  em {
    font-size: 0.8rem;
  }
  a {
    color: var(--ion-color-secondary);
  }
}

.empty-box {
  min-height: 420px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

body.dark {
  app-breadcrumb {
    a,
    li + li:before {
      color: var(--ion-color-secondary);
    }
  }
}

body:not(.dark) {
  app-breadcrumb {
    a,
    li + li:before {
      color: var(--ion-color-primary);
    }
  }
}

.medium-zoom-overlay {
  background: var(--ion-background-color) !important;
  z-index: 2;
}
.medium-zoom-image--opened {
  z-index: 3;
}
blockquote {
  position: relative;
}
blockquote::before {
  content: '';
  background: var(--gradient);
  width: 8px;
  position: absolute;
  height: 100%;
  left: -18px;
  border-radius: 4px;
}
